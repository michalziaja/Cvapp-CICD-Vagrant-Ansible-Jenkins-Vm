Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true 
  config.hostmanager.manage_host = true
    

    config.vm.define "react" do |react|
      react.vm.boot_timeout = 2000
      react.vm.box = "ubuntu/focal64"
      react.vm.hostname = "react"
      react.vm.network "private_network", ip: "192.168.22.23"
      react.vm.network "public_network"
      react.vm.provider "virtualbox" do |vb|
        vb.memory = "800"
      end
      react.vm.provision "shell", inline: <<-SHELL
        sudo cp /vagrant/keys/ubuntu.pub /home/ubuntu/.ssh/authorized_keys
        sudo sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
        sudo systemctl restart ssh
      SHELL
    end
  
    config.vm.define "api" do |api|
      api.vm.boot_timeout = 2000
      api.vm.box = "ubuntu/focal64"
      api.vm.hostname = "api"
      api.vm.network "private_network", ip: "192.168.22.24"
      api.vm.provider "virtualbox" do |vb|
        vb.memory = "800"
      end
      api.vm.provision "shell", inline: <<-SHELL
        sudo cp /vagrant/keys/ubuntu.pub /home/ubuntu/.ssh/authorized_keys
        sudo sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
        sudo systemctl restart ssh
      SHELL
    end
  
    config.vm.define "mongo" do |mongo|
      mongo.vm.boot_timeout = 2000
      mongo.vm.box = "ubuntu/focal64"
      mongo.vm.hostname = "mongo"
      mongo.vm.network "private_network", ip: "192.168.22.25"
      mongo.vm.provider "virtualbox" do |vb|
        vb.memory = "1024"
      end
      mongo.vm.provision "shell", inline: <<-SHELL
        sudo cp /vagrant/keys/ubuntu.pub /home/ubuntu/.ssh/authorized_keys
        sudo sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
        sudo systemctl restart ssh
      SHELL
    end

    config.vm.define "host" do |host|
      host.vm.boot_timeout = 2000
      host.vm.box = "ubuntu/focal64"
      host.vm.hostname = "host"
      host.vm.network "private_network", ip: "192.168.22.22"
      host.vm.network "public_network"
      host.vm.provider "virtualbox" do |vb|
        vb.memory = "3000"   
      end
      host.vm.provision "shell", inline: <<-SHELL
        
        echo '#########Setup ubuntu key for Ansible#########'
        sudo cp /vagrant/keys/ubuntu.pub /home/ubuntu/.ssh/authorized_keys
        sudo sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
        sudo systemctl restart ssh
        

        echo '#########Install Ansible#########'
        sudo apt-get update
        sudo apt-get install software-properties-common
        #sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt-get install ansible -y


        echo '##########Install Jenkins#########'
        sudo apt-get update
        sudo apt-get install openjdk-17-jdk -y  

        sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
        https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        
        echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
        https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
        /etc/apt/sources.list.d/jenkins.list > /dev/null
        
        sudo apt-get update
        sudo apt-get install jenkins -y
        sudo systemctl start jenkins
        sudo systemctl enable jenkins
        

        echo '#########Create key for Jenkins#########'
        sudo su - jenkins -c "ssh-keygen -t rsa -b 2048 -f /vagrant/keys/id_rsa -N ''"
        sudo chmod 400 /vagrant/keys/id_rsa


        echo '#######Install Docker#########'  
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        
        sudo newgrp docker
        sudo usermod -aG docker ubuntu


        echo '########Install Pip#######'
        sudo apt-get install python3-pip -y


        echo '########Setup and Run Ansible########'
        sudo cp -r /vagrant/ansible/* /etc/ansible
        cd /etc/ansible
        sudo chmod 400 /vagrant/keys/ubuntu
        sudo ansible-playbook -i inventory playbook.yaml
        sudo chmod 666 /var/run/docker.sock

        echo '########Key&Login checking########'
        sudo su - jenkins -c "ssh -i /vagrant/keys/id_rsa -o StrictHostKeyChecking=no ubuntu@192.168.22.23 echo 'Logged in Frontend!' && exit"
        echo
        sudo su - jenkins -c "ssh -i /vagrant/keys/id_rsa -o StrictHostKeyChecking=no ubuntu@192.168.22.24 echo 'Logged in Backend!' && exit"
        echo
        sudo su - jenkins -c "ssh -i /vagrant/keys/id_rsa -o StrictHostKeyChecking=no ubuntu@192.168.22.25 echo 'Logged in Database!' && exit"
        echo

        echo '#######JENKINS PASSWORD#########'
        echo ''
        sudo cat /var/lib/jenkins/secrets/initialAdminPassword
        echo ''
        echo '################################'

      SHELL
    end
  end
  
